# Crypto Compliance Content Agent - .env example
# Copy this file to .env and fill secrets

# Model provider: 'ollama' or 'openai'
MODEL_PROVIDER=ollama

# Ollama/Nosana
OLLAMA_API_URL=https://<your-ollama-or-nosana-endpoint>/api
MODEL_NAME_AT_ENDPOINT=qwen3:8b

# OpenAI (if using OpenAI)
# OPENAI_API_KEY=

# Upstash Vector for RAG
UPSTASH_VECTOR_ENDPOINT=https://<your-upstash-vectors-endpoint>.upstash.io
UPSTASH_VECTOR_TOKEN=<REPLACE_WITH_UPSTASH_TOKEN>
UPSTASH_VECTOR_INDEX=crypto-compliance-index

# Local DB for agent memory (replace or use in-memory)
CRYPTO_AGENT_DB_URL=file:crypto_agent.db

NEXT_PUBLIC_DEFAULT_AGENT=cryptoAgent
NEXT_PUBLIC_COPILOTKIT_RUNTIME=/api/copilotkit

LOG_LEVEL=info
# Qwen3:8b - Nosana Endpoint
# Note baseURL for Ollama needs to be appended with `/api`
OLLAMA_API_URL=https://3yt39qx97wc9hqwwmylrphi4jsxrngjzxnjakkybnxbw.node.k8s.prd.nos.ci/api
MODEL_NAME_AT_ENDPOINT=qwen3:8b

# Qwen3:8b - Nosana Endpoint
# Note baseURL for Ollama needs to be appended with `/api`
# OLLAMA_API_URL=https://<nosana-url-id>.node.k8s.prd.nos.ci/api
# MODEL_NAME_AT_ENDPOINT=qwen3:8b

# Qwen3:8b - LocalHost - Local Development
# https://ollama.com/download
# Note baseURL for Ollama needs to be appended with `/api`
# `ollama pull qwen3:0.6b`
# `ollama serve`
# OLLAMA_API_URL=http://127.0.0.1:11434/api
# MODEL_NAME_AT_ENDPOINT=qwen3:0.6b

# OpenAI - Uncomment and add apikey to use OpenAI
# Uncomment the corresponding line in `src/mastra/agents/index.ts` to use OpenAI
# OPENAI_API_KEY=
